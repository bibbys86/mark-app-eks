user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # JSON 로그 형식 정의
    log_format json_combined escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"service":"mark-shop-nginx-proxy",'
        '"env":"mark-shop"'
    '}';

    access_log /var/log/nginx/access.log json_combined;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name localhost;

        # 로컬 RUM SDK 서빙
        location = /datadog-rum-sdk.js {
            alias /etc/nginx/datadog-rum-sdk.js;
            add_header Content-Type application/javascript;
            add_header Cache-Control "public, max-age=3600";
            add_header Access-Control-Allow-Origin "*";
            expires 1h;
        }

        # RUM 스크립트 인젝션을 위한 설정
        location / {
            proxy_pass http://frontend-service:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Datadog RUM-APM 연결을 위한 tracing headers 전달
            proxy_set_header x-datadog-trace-id $http_x_datadog_trace_id;
            proxy_set_header x-datadog-parent-id $http_x_datadog_parent_id;
            proxy_set_header x-datadog-origin $http_x_datadog_origin;
            proxy_set_header x-datadog-sampling-priority $http_x_datadog_sampling_priority;
            proxy_set_header traceparent $http_traceparent;
            proxy_set_header tracestate $http_tracestate;
            proxy_set_header b3 $http_b3;
            proxy_set_header X-B3-TraceId $http_x_b3_traceid;
            proxy_set_header X-B3-SpanId $http_x_b3_spanid;
            proxy_set_header X-B3-Sampled $http_x_b3_sampled;

            # 응답 수정을 위한 버퍼링 활성화
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;

            # HTML 응답에 RUM 스크립트 주입
            sub_filter '</head>' '<script src="/rum-inject.js"></script></head>';
            sub_filter_once on;
            sub_filter_types text/html;
        }

        # RUM injection 스크립트 서빙
        location = /rum-inject.js {
            alias /etc/nginx/rum-inject.js;
            add_header Content-Type application/javascript;
            add_header Cache-Control "no-cache";
            expires -1;
        }

        # API 요청을 백엔드로 프록시
        location /api/ {
            proxy_pass http://backend-service:3000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Datadog RUM-APM 연결을 위한 tracing headers 전달
            proxy_set_header x-datadog-trace-id $http_x_datadog_trace_id;
            proxy_set_header x-datadog-parent-id $http_x_datadog_parent_id;
            proxy_set_header x-datadog-origin $http_x_datadog_origin;
            proxy_set_header x-datadog-sampling-priority $http_x_datadog_sampling_priority;
            proxy_set_header traceparent $http_traceparent;
            proxy_set_header tracestate $http_tracestate;
            proxy_set_header b3 $http_b3;
            proxy_set_header X-B3-TraceId $http_x_b3_traceid;
            proxy_set_header X-B3-SpanId $http_x_b3_spanid;
            proxy_set_header X-B3-Sampled $http_x_b3_sampled;
            
            # RUM과 APM 연결을 위한 CORS 헤더 (Datadog 문서 기준)
            # tracing headers는 CORS-safelisted가 아니므로 명시적으로 허용 필요
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-datadog-trace-id,x-datadog-parent-id,x-datadog-origin,x-datadog-sampling-priority,traceparent,tracestate,b3,X-B3-TraceId,X-B3-SpanId,X-B3-Sampled' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            
            # OPTIONS 요청 처리 (preflight)
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Ad Blocker 우회를 위한 Datadog 프록시
        location /dd-rum/ {
            # OPTIONS 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # 실제 요청을 Datadog으로 프록시
            proxy_pass https://browser-intake-datadoghq.com/;
            proxy_ssl_verify off;
            proxy_set_header Host browser-intake-datadoghq.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 헬스 체크 엔드포인트
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
} 